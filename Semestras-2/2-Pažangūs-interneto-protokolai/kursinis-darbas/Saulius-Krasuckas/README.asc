[.text-center]
==== Vilniaus Gedimino technikos universitetas
[.text-center]
==== Kompiuterijos ir ryšių inžinerijos katedra
[.text-center]
== Pažangūs interneto protokolai. Kursinio projekto užduotis

==== Individuali užduotis Nr.: 7

|===
 | |

 | Studentui:
 | Sauliui Krasuckui

 | Pavadinimas:
 | TCP HighSpeed, TCP BIC protokolų palyginimas

 | Tinklo schema:  
a|image::https://user-images.githubusercontent.com/74717106/120938576-0a415e80-c71c-11eb-8b1e-c475b7594667.png[]

 | Duomenys:
 | 
TCP protokolai: TCP HighSpeed, TCP BIC +
Siųstuvų skaičius: 1 – 5 +
Imtuvų skaičius: 1 +
Visų kanalų sparta: 100 Mb/s +
Tiriamos linijos kanalo paketų praradimas: 0 %, 4 %, 6 % +
Tiriamos linijos kanalo vėlinimas: 2 ms, 6 ms, 80 ms +
Srauto generatorius: ftp +
Modeliavimo trukmė: nemažiau 5 min +

 | Ataskaitoje pateikiami grafikai:
a|
4. Abiejų TCP protokolų vidutinio pralaidumo priklausomybė 2D
grafikų forma nuo:
a. šaltinių skaičiaus, kai kiti parametrai yra minimalūs;
b. tiriamos linijos paketų praradimo, kai šaltinių skaičius 5, o
kiti parametrai minimalūs;
c. kanalo vėlinimo, kai šaltinių skaičius 5, o kiti parametrai
minimalūs;

5. Pasirinkto TCP šaltinio abiejų TCP protokolų grūsties lango (angl.
Congestion Window) kitimo priklausomybė laike:
a. kinta šaltinių skaičiaus, o tiriamos linijos parametrai
minimalūs;
b. kinta tiriamos linijos paketų praradimai, šaltinių skaičiaus
maksimalus, o kiti parametrai minimalūs;
c. kinta tiriamos linijos paketų vėlinimas, šaltinių skaičiaus
maksimalus, o kiti parametrai minimalūs;

6. Abiejų TCP protokolų pralaidumo kitimo laike grafikai, esant
ribinėms sąlygoms (kai visi parametrai minimalūs ir kai
maksimalūs) (vienas grafikas)

 | Rašto darbo turinys: 
 | 
1. Įvadas, +
2. Teorinis protokolų palyginimas, +
3. Modeliavimo algoritmas, +
4. Modeliavimo rezultatai, +
5. Išvados
|===

<<<
---

[.text-left]
=== 1. Įvadas

Modeliuosime tinklą `NS-2` įrankio pagalba.

=== 2. Teorinis TCP protokolo valdymo algoritmų palyginimas

1. *TCP HighSpeed* algoritmas +
   {nbsp} +
   Dar vadinamas HSTCP. Aprašytas https://datatracker.ietf.org/doc/html/rfc3649#section-1[RFC 3649].
   Skirtas TCP pralaidai maksimizuoti LFN tinkluose (angl. _Long fat network_): ten, kur pralaidos ir vėlinimo sandaugos vertė yra didelė.
   Tam jis (HSTCP) minimaliai papildo standartinį TCP grūsties valdymo algoritmą: 
   * _Slow Start_ fazė lieka tokia pati;
   * _Congestion Avoidance_ fazė daloma į dvi dalis:
   ** Kol CWND dydis *neviršija tam tikros ribos*, HSTCP dar atitinka klasikinį TCP:
   *** langas su kiekvienu ACK padidinimas įprastai, po `1/CWND * MSS`,
   *** o aptikus praradimą langas nukrenta iki `0.5 * CWND`.
   ** Kai CWND dydis *ją viršija*, didinimo daugiklis ir nukritimo vertė tampa CWND funkcijomis:
   *** `a(CWND)/CWND * MSS`
   *** `(1 - b(CWND)) * CWND`
   *** Jos tokios, kad HSTCP *CWND ir užauga, ir nukrenta greičiau* nei klasikiniame TCP.
   {nbsp}

2. *TCP BIC* algoritmas +
   {nbsp} +
   Išsišifruoja angl. kaip _Binary Increase Congestion control_.
   Irgi skirtas stipriam TCP pralaidos padidinimui LFN tinkluose.
   Tai jau yra unikalus algoritmas, kuris:
   * CWND didinimui pasirenka vieną iš trijų būdų:
     . dvejatainę paieška (bisekciją);
     . adityvinį didinimą (grubiai sumavimą);
     . _Slow_ startą.
   * Tam algoritmas rezervuojasi ir naudoja tris kintamuosius: `S_max`, `S_min`, `w_max`.
   Tai yra, pagal juos apskaičiuoja `a(CWND)`
   * CWND mažinimui (aptikus bent vieną praradimą) naudoja tik:
     . multiplikatyvinį mažinimą (grubiai dalybą),
   * Tam algoritmas rezervuojasi ir panaudoja dar vieną kintamąjį `β`.
   * Jei apdoroja du srautus su stipriai besiskiriančiais CWND, pakeičia dalinimo koeficientus (įjungia _Fast Convergence_).
   Tai yra, pagal jį ir `w_max` pasirenka `b(CWND)` reikšmę bei pakoreguoja patį `w_max`.
   
=== 3. Modeliavimo eiga
=== 4. Modeliavimo rezultatai
=== 5. Išvados
